import{g as P}from"./index.9dfc6b81.js";var T="precision highp float;attribute vec2 vPos;void main(){gl_Position=vec4(vPos,0.0,1.0);}",p="precision highp float;uniform vec2 viewportDimensions;uniform float minI;uniform float maxI;uniform float minR;uniform float maxR;void main(){vec2 c=vec2(gl_FragCoord.x*(maxR-minR)/viewportDimensions.x+minR,gl_FragCoord.y*(maxI-minI)/viewportDimensions.y+minI);vec2 z=c;float iterations=0.0;float maxIterations=2000.0;const int maxIterationsInt=2000;for(int i=0;i<maxIterationsInt;i++){float t=2.0*z.x*z.y+c.y;z.x=z.x*z.x-z.y*z.y+c.x;z.y=t;if(z.x*z.x+z.y*z.y>4.0){break;}iterations+=1.0;}if(iterations<maxIterations){discard;}else{gl_FragColor=vec4(0.0,0.0,1.0,1.0);}}";const e=P(),c=e.createShader(e.VERTEX_SHADER);e.shaderSource(c,T);e.compileShader(c);e.getShaderParameter(c,e.COMPILE_STATUS)||console.error(e.getShaderInfoLog(c));const f=e.createShader(e.FRAGMENT_SHADER);e.shaderSource(f,p);e.compileShader(f);e.getShaderParameter(f,e.COMPILE_STATUS)||console.error(e.getShaderInfoLog(f));const t=e.createProgram();e.attachShader(t,c);e.attachShader(t,f);e.linkProgram(t);e.getProgramParameter(t,e.LINK_STATUS)||console.error(e.getProgramInfoLog(t));e.validateProgram(t);e.getProgramParameter(t,e.VALIDATE_STATUS)||console.error(e.getProgramInfoLog(t));e.useProgram(t);const g={viewportDimensions:e.getUniformLocation(t,"viewportDimensions"),minI:e.getUniformLocation(t,"minI"),maxI:e.getUniformLocation(t,"maxI"),minR:e.getUniformLocation(t,"minR"),maxR:e.getUniformLocation(t,"maxR")},h=[e.canvas.width,e.canvas.height];let n=-2,i=2,r=-2,m=2;const E=e.createBuffer(),L=[-1,1,-1,-1,1,-1,-1,1,1,1,1,-1];e.bindBuffer(e.ARRAY_BUFFER,E);e.bufferData(e.ARRAY_BUFFER,new Float32Array(L),e.STATIC_DRAW);const x=e.getAttribLocation(t,"vPos");e.vertexAttribPointer(x,2,e.FLOAT,!1,2*Float32Array.BYTES_PER_ELEMENT,0);e.enableVertexAttribArray(x);let l,I=performance.now(),A,d=[],S=performance.now();const u=()=>{if(l=performance.now(),A=l-I,I=l,d.push(A),S+1e3<l){S=l;let o=0;for(let a=0;a<d.length;a++)o+=d[a];o/=d.length,document.title=1e3/o+" fps"}requestAnimationFrame(u),e.clearColor(0,0,0,1),e.clear(e.DEPTH_BUFFER_BIT|e.COLOR_BUFFER_BIT),e.uniform2fv(g.viewportDimensions,h),e.uniform1f(g.minI,n),e.uniform1f(g.maxI,i),e.uniform1f(g.minR,r),e.uniform1f(g.maxR,m),e.drawArrays(e.TRIANGLES,0,6)};requestAnimationFrame(u);const R=()=>{e.canvas.width=window.innerWidth,e.canvas.height=window.innerHeight,h[0]=e.canvas.width,h[1]=e.canvas.height;const o=m-r;m=(i-n)*(e.canvas.width/e.canvas.height)+r,r-=(m-r-o)/2,m=(i-n)*(e.canvas.width/e.canvas.height)+r,e.viewport(0,0,e.canvas.width,e.canvas.height)};R();const F=o=>{const a=i-n;let s;o.deltaY<0?s=a*.95:s=a*1.05,n-=(s-a)/2,i=n+s,R()},_=o=>{if(o.buttons===1){const a=i-n,s=m-r,v=o.movementY/e.canvas.height*a,w=o.movementX/e.canvas.width*s;n+=v,i+=v,r-=w,m-=w}};window.addEventListener("wheel",F);window.addEventListener("resize",R);window.addEventListener("mousemove",_);
